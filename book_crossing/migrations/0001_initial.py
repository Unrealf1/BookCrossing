# Generated by Django 2.2.7 on 2020-01-15 17:10

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_title', models.CharField(max_length=200, verbose_name='название статьи')),
                ('article_text', models.TextField(verbose_name='текст статьи')),
                ('pub_date', models.DateTimeField(verbose_name='дата публикации')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id автора')),
                ('name', models.CharField(max_length=100, verbose_name='имя автора')),
                ('name2', models.CharField(max_length=100, verbose_name='имя автора на другом языке')),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id книги')),
                ('name', models.CharField(max_length=100, verbose_name='название книги')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='id пользователя')),
                ('login', models.CharField(max_length=30, verbose_name='логин')),
                ('password_hash', models.CharField(max_length=256, verbose_name='password hash')),
                ('mail_index', models.IntegerField(verbose_name='почтовый индекс')),
                ('user_chosen_info', models.CharField(max_length=200, verbose_name='то, что пользователь заполняет сам')),
            ],
        ),
        migrations.CreateModel(
            name='WantedBook',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='имя книги')),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_crossing.Author')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_crossing.User')),
            ],
        ),
        migrations.CreateModel(
            name='FavouriteAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_crossing.Author')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_crossing.User')),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(verbose_name='статус запроса')),
                ('date', models.DateTimeField(verbose_name='дата и время запроса')),
                ('user_text', models.CharField(max_length=200, verbose_name='текст пользователя при запросе')),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='book_id', to='book_crossing.Book')),
                ('exchange_book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exchange_book_id', to='book_crossing.Book')),
                ('requestee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requestee_id_ex', to='book_crossing.User')),
                ('requester_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requester_id_ex', to='book_crossing.User')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=50, verbose_name='имя автора')),
                ('comment_text', models.CharField(max_length=200, verbose_name='текст клмментария')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_crossing.Article')),
            ],
        ),
        migrations.CreateModel(
            name='BorrowRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(verbose_name='статус запроса')),
                ('date', models.DateTimeField(verbose_name='дата и время запроса')),
                ('user_text', models.CharField(max_length=200, verbose_name='текст пользователя при запросе')),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_crossing.Book')),
                ('requestee_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requestee_id', to='book_crossing.User')),
                ('requester_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requester_id', to='book_crossing.User')),
            ],
        ),
        migrations.CreateModel(
            name='BookAuthor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_crossing.Author')),
                ('book_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='book_crossing.Book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='owner_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owner_id', to='book_crossing.User'),
        ),
        migrations.AddField(
            model_name='book',
            name='taken_by_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='taken_by_id', to='book_crossing.User'),
        ),
    ]
